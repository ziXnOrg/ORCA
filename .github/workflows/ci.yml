name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build-test:
    name: build-test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.75.0
          components: clippy, rustfmt, llvm-tools-preview

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('Docs/API/**/*.proto') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Format check
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Tests (unit + integration)
        run: cargo test --all --all-features --quiet

      - name: Upload proto artifact
        uses: actions/upload-artifact@v4
        with:
          name: orca_v1.proto
          path: Docs/API/orca_v1.proto

  coverage:
    name: coverage (ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.75.0
          components: llvm-tools-preview

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: coverage-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('Docs/API/**/*.proto') }}
          restore-keys: |
            coverage-cargo-

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov --locked

      - name: Generate coverage (lcov)
        run: |
          cargo llvm-cov --workspace --all-features --lcov --output-path lcov.info

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: lcov.info
          path: lcov.info

  otel-and-replay:
    name: otel-and-replay smoke
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.75.0

      - name: Build orchestration (otel)
        run: cargo build -p orchestrator --features otel

      - name: Build replay-cli
        run: cargo build -p replay-cli

      - name: Debugging guide artifact
        uses: actions/upload-artifact@v4
        with:
          name: debugging.md
          path: Docs/debugging.md
